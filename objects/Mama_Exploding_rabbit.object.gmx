<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Mama_Rabbit_wiggle_ear</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Enemy stats
global.enemy=Mama_Exploding_rabbit;
attack=3;
defence=1;
maxhp=100;
max_dark_energy=30;
dark_mark=1;
dark_mark_location[1]=12;
max_soul_size=12;
min_soul_size=6;
jumpspeed = 20
movespeed = 15;
attack_speed=10;

//HUD
icon=spr_Mama_Exploding_Rabbit_Icon;
HUD_color=c_aqua;

//Standard Initialization
hp=maxhp;
dark_energy=max_dark_energy;
soul_strength=scr_calculate_soul_strength(dark_mark,dark_energy,dark_mark_location);
soul_size=max_soul_size;
alarm[0]=10;
alarm[1]=10;
depth=-BattleGround.y;
image_speed=0;
grav=Game_Control.grav;

//Specific initialization
vsp=0;
terminal_vsp=4;
trigger_landing=false;
turn=1;   // for enemies that has special attacks at fixed turns
wiggle_ear_speed=0.3;

//Soul Fields
with (instance_create(x,BattleGround.y,Enemy_Soul_Field_back)) {
    image_blend=c_red;    
}
with (instance_create(x,BattleGround.y,Enemy_Soul_Field_front)) {
    image_blend=c_red;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//execute skills
switch (turn) {
    case 1:
        timeline_index=spawn_5_exploding_rabbit;
        break;
        
    case 3:
        bomb_x_pos=1056;
        timeline_index = spawn_5_winged_bomb_v1;
        break;
        
    case 5:
        // spawn 3 lines of bomb 
        for (i=1;i&lt;=2;i++) {
            with (instance_create(0, 0, timeline_worker)) {
                subject = other.id;
                bomb_x_pos=other.i*150+906;
                timeline_index = spawn_5_winged_bomb_v1;
                timeline_running = false;
                timeline_position =  0;
                alarm[0]=other.i*60;
            }
        }
        bomb_x_pos=906;
        timeline_index = spawn_5_winged_bomb_v1;
        break;
        
    case 8:
        bomb_x_pos=1056;
        timeline_index = spawn_5_winged_bomb_v2;
        break;
    
    case 10: 
        // spawn 5 lines of bomb 
        for (i=1;i&lt;=4;i++) {
            with (instance_create(0, 0, timeline_worker)) {
                subject = other.id;
                bomb_x_pos=other.i*100+856;
                timeline_index = spawn_5_winged_bomb_v2;
                timeline_running = false;
                timeline_position =  0;
                alarm[0]=other.i*60;
            }
        }
        bomb_x_pos=856;
        timeline_index = spawn_5_winged_bomb_v2;
        break;

    default:
        timeline_index = choose(spawn_5_exploding_rabbit,spawn_13_falling_rabbit);

}
timeline_position = 0;
timeline_running = true;
timeline_loop = false
turn+=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// movement and jump

if (place_meeting(x,y+1,BattleGround))
{
    trigger_landing=false;
    vsp = -jumpspeed;
    sprite_index=spr_Mama_Rabbit_fly;
    image_index=0;
    image_speed=0;
    
}

alarm[0]=irandom_range(5,100);
jumpspeed=irandom_range(18,25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// vertival movement
if (vsp &lt; terminal_vsp) vsp += grav;
//Vertical Collision
if (place_meeting(x,y+vsp,BattleGround))
{
    while(!place_meeting(x,y+sign(vsp),BattleGround))
    {
        y += sign(vsp);
    }
    vsp = 0;
    
    if (vsp&gt;=0) {trigger_landing=true;}
}
y += vsp;

//Soul Field changes
soul_size=(max_soul_size-min_soul_size)*hp/maxhp+min_soul_size;
soul_strength=scr_calculate_soul_strength(dark_mark,dark_energy,dark_mark_location);

//Flying Animation
if (vsp&gt;=terminal_vsp-image_number &amp;&amp; !place_meeting(x,y+1,BattleGround)) {
    if (image_index&lt;image_number-1) {
        image_speed=1;
    }
    else {
        image_index=image_number-1;
        image_speed=0;
    }
}

//Landing animation
if (trigger_landing) {
    image_speed=0;
    if (image_index&gt;0 &amp;&amp; sprite_index==spr_Mama_Rabbit_fly) { 
        image_index-=1;
    }
    else{
        sprite_index=spr_Mama_Rabbit_wiggle_ear;
        image_speed=wiggle_ear_speed;
        trigger_landing=false;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
